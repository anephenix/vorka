{"name":"Vorka","tagline":"An experimental web framework for Node.js","body":"Vorka\r\n===\r\n\r\nAn experimental web framework for Node.js\r\n\r\n[![npm version](https://badge.fury.io/js/vorka.svg)](http://badge.fury.io/js/vorka)\r\n[![Build Status](https://travis-ci.org/anephenix/vorka.svg?branch=master)](https://travis-ci.org/anephenix/vorka)\r\n[![Code Climate](https://codeclimate.com/github/anephenix/vorka/badges/gpa.svg)](https://codeclimate.com/github/anephenix/vorka)\r\n[![Dependency Status](https://david-dm.org/anephenix/vorka.svg)](https://david-dm.org/anephenix/vorka)\r\n[![devDependency Status](https://david-dm.org/anephenix/vorka/dev-status.svg)](https://david-dm.org/anephenix/vorka#info=devDependencies)\r\n[![Coverage Status](https://coveralls.io/repos/anephenix/vorka/badge.svg?branch=master&service=github)](https://coveralls.io/github/anephenix/vorka?branch=master)\r\n[![Codacy Badge](https://www.codacy.com/project/badge/db641ecf28b2425a8252d949a9b41490)](https://www.codacy.com/app/paulbjensen/vorka)\r\n\r\nInstallation\r\n---\r\n\r\n    npm install vorka\r\n\r\nWhy Vorka?\r\n---\r\n\r\nVorka was a fresh look at how HTTP works in Node.js, and an attempt at building a small DSL around it to support simple sites. I noticed in rudimentary benchmarking tests that a Node.js HTTP server's bootup time compared to Connect/ExpressJS was significantly faster (57ms vs 120ms on a 2010 MacBook Air 11\"). I explored this concept a bit more, and came up with a project, which is named after the song \"Vorka\" by the Hidden Orchestra.\r\n\r\nIt's essentially a sandbox for experimentation.\r\n\r\nUsage\r\n---\r\n\r\nHere is a simple example of returning some inline HTML with a 200 status when making a GET request to /\r\n\r\n\tvar app = require('vorka');\r\n\r\n\tapp.get('/', function (req, res) {\r\n\t\tres.html(200, '<html><head><title>Sample HTML</title></head><body><h1>Hello</h1></body></html>');\r\n\t});\r\n\r\n\tapp.listen(3000);\r\n\r\nVorka supplies a simple HTTP server that is extended with some helper functions:\r\n\r\nDSL helper functions\r\n---\r\n\r\n#### HTTP method helper functions\r\n\r\nSimilar to Sinatra in Ruby or Express in Node, we provide a simple DSL for adding routes and functions based on their HTTP method. Below is an example for a GET request for an app.css file at /app.css\r\n\r\n    e.g.\r\n\r\n    app.get('/app.css', function (req, res) {\r\n    \tres.css(200, 'body { background: red; }');\r\n    });\r\n\r\nThe same pattern exists for the following HTTP methods:\r\n\r\n\t- POST \t\t(app.post)\r\n\t- PUT \t\t(app.put)\r\n\t- PATCH\t\t(app.patch)\r\n\t- DELETE \t(app.delete)\r\n\t- HEAD \t\t(app.head)\r\n\r\n#### Response helper functions\r\n\r\nThere are also HTTP response helper functions that populate the HTTP headers for common formats:\r\n\r\n\t- HTML\r\n\t- CSS\r\n\t- JavaScript\r\n\t- plain text\r\n\r\ne.g.\r\n\r\n\tapp.get('/app.js', function (req, res) {\r\n\t\tres.js(200, 'alert(\"hi\");');\r\n\t});\r\n\r\n\r\nContributing to Vorka\r\n---\r\n\r\nWe welcome contributions to Vorka. Here are some useful tips:\r\n\r\n- We use JSHint to help keep the code formatting consistent\r\n- We write and run tests using Mocha\r\n- We currently benchmark manually, but will be bringing in a benchmarking suite soon\r\n\r\nLicence and rights\r\n---\r\n\r\n&copy; 2015 Anephenix Ltd. Vorka is licenced under the MIT license. - See LICENSE for details.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}